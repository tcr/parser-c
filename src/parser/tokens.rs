// Original file: "Tokens.hs"
// File auto-generated using Corollary.

use data::position::{Position, PosLength, Pos};
use data::ident::Ident;
use syntax::constants::*;

#[derive(Clone, Debug, Pos)]
pub enum CToken {
    CTokLParen(PosLength),
    CTokRParen(PosLength),
    CTokLBracket(PosLength),
    CTokRBracket(PosLength),
    CTokArrow(PosLength),
    CTokDot(PosLength),
    CTokExclam(PosLength),
    CTokTilde(PosLength),
    CTokInc(PosLength),
    CTokDec(PosLength),
    CTokPlus(PosLength),
    CTokMinus(PosLength),
    CTokStar(PosLength),
    CTokSlash(PosLength),
    CTokPercent(PosLength),
    CTokAmper(PosLength),
    CTokShiftL(PosLength),
    CTokShiftR(PosLength),
    CTokLess(PosLength),
    CTokLessEq(PosLength),
    CTokHigh(PosLength),
    CTokHighEq(PosLength),
    CTokEqual(PosLength),
    CTokUnequal(PosLength),
    CTokHat(PosLength),
    CTokBar(PosLength),
    CTokAnd(PosLength),
    CTokOr(PosLength),
    CTokQuest(PosLength),
    CTokColon(PosLength),
    CTokAssign(PosLength),
    CTokPlusAss(PosLength),
    CTokMinusAss(PosLength),
    CTokStarAss(PosLength),
    CTokSlashAss(PosLength),
    CTokPercAss(PosLength),
    CTokAmpAss(PosLength),
    CTokHatAss(PosLength),
    CTokBarAss(PosLength),
    CTokSLAss(PosLength),
    CTokSRAss(PosLength),
    CTokComma(PosLength),
    CTokSemic(PosLength),
    CTokLBrace(PosLength),
    CTokRBrace(PosLength),
    CTokEllipsis(PosLength),
    CTokAlignof(PosLength),
    CTokAlignas(PosLength),
    CTokAsm(PosLength),
    CTokAtomic(PosLength),
    CTokAuto(PosLength),
    CTokBreak(PosLength),
    CTokBool(PosLength),
    CTokCase(PosLength),
    CTokChar(PosLength),
    CTokConst(PosLength),
    CTokContinue(PosLength),
    CTokComplex(PosLength),
    CTokDefault(PosLength),
    CTokDo(PosLength),
    CTokDouble(PosLength),
    CTokElse(PosLength),
    CTokEnum(PosLength),
    CTokExtern(PosLength),
    CTokFloat(PosLength),
    CTokFor(PosLength),
    CTokGeneric(PosLength),
    CTokGoto(PosLength),
    CTokIf(PosLength),
    CTokInline(PosLength),
    CTokInt(PosLength),
    CTokInt128(PosLength),
    CTokLong(PosLength),
    CTokLabel(PosLength),
    CTokNoreturn(PosLength),
    CTokNullable(PosLength),
    CTokNonnull(PosLength),
    CTokRegister(PosLength),
    CTokRestrict(PosLength),
    CTokReturn(PosLength),
    CTokShort(PosLength),
    CTokSigned(PosLength),
    CTokSizeof(PosLength),
    CTokStatic(PosLength),
    CTokStaticAssert(PosLength),
    CTokStruct(PosLength),
    CTokSwitch(PosLength),
    CTokTypedef(PosLength),
    CTokTypeof(PosLength),
    CTokThread(PosLength),
    CTokUnion(PosLength),
    CTokUnsigned(PosLength),
    CTokVoid(PosLength),
    CTokVolatile(PosLength),
    CTokWhile(PosLength),
    CTokCLit(PosLength, CChar),
    CTokILit(PosLength, CInteger),
    CTokFLit(PosLength, CFloat),
    CTokSLit(PosLength, CString),
    CTokIdent(PosLength, Ident),
    CTokTyIdent(PosLength, Ident),
    CTokGnuC(PosLength, GnuCTok),
    CTokClangC(PosLength, ClangCTok),
    CTokEof,
}
pub use self::CToken::*;

impl CToken {
    pub fn into_pos_len(self) -> PosLength {
        match self {
            CTokLParen(posl) => posl,
            CTokRParen(posl) => posl,
            CTokLBracket(posl) => posl,
            CTokRBracket(posl) => posl,
            CTokArrow(posl) => posl,
            CTokDot(posl) => posl,
            CTokExclam(posl) => posl,
            CTokTilde(posl) => posl,
            CTokInc(posl) => posl,
            CTokDec(posl) => posl,
            CTokPlus(posl) => posl,
            CTokMinus(posl) => posl,
            CTokStar(posl) => posl,
            CTokSlash(posl) => posl,
            CTokPercent(posl) => posl,
            CTokAmper(posl) => posl,
            CTokShiftL(posl) => posl,
            CTokShiftR(posl) => posl,
            CTokLess(posl) => posl,
            CTokLessEq(posl) => posl,
            CTokHigh(posl) => posl,
            CTokHighEq(posl) => posl,
            CTokEqual(posl) => posl,
            CTokUnequal(posl) => posl,
            CTokHat(posl) => posl,
            CTokBar(posl) => posl,
            CTokAnd(posl) => posl,
            CTokOr(posl) => posl,
            CTokQuest(posl) => posl,
            CTokColon(posl) => posl,
            CTokAssign(posl) => posl,
            CTokPlusAss(posl) => posl,
            CTokMinusAss(posl) => posl,
            CTokStarAss(posl) => posl,
            CTokSlashAss(posl) => posl,
            CTokPercAss(posl) => posl,
            CTokAmpAss(posl) => posl,
            CTokHatAss(posl) => posl,
            CTokBarAss(posl) => posl,
            CTokSLAss(posl) => posl,
            CTokSRAss(posl) => posl,
            CTokComma(posl) => posl,
            CTokSemic(posl) => posl,
            CTokLBrace(posl) => posl,
            CTokRBrace(posl) => posl,
            CTokEllipsis(posl) => posl,
            CTokAlignof(posl) => posl,
            CTokAlignas(posl) => posl,
            CTokAsm(posl) => posl,
            CTokAtomic(posl) => posl,
            CTokAuto(posl) => posl,
            CTokBreak(posl) => posl,
            CTokBool(posl) => posl,
            CTokCase(posl) => posl,
            CTokChar(posl) => posl,
            CTokConst(posl) => posl,
            CTokContinue(posl) => posl,
            CTokComplex(posl) => posl,
            CTokDefault(posl) => posl,
            CTokDo(posl) => posl,
            CTokDouble(posl) => posl,
            CTokElse(posl) => posl,
            CTokEnum(posl) => posl,
            CTokExtern(posl) => posl,
            CTokFloat(posl) => posl,
            CTokFor(posl) => posl,
            CTokGeneric(posl) => posl,
            CTokGoto(posl) => posl,
            CTokInt(posl) => posl,
            CTokInt128(posl) => posl,
            CTokInline(posl) => posl,
            CTokIf(posl) => posl,
            CTokLong(posl) => posl,
            CTokLabel(posl) => posl,
            CTokNoreturn(posl) => posl,
            CTokNullable(posl) => posl,
            CTokNonnull(posl) => posl,
            CTokRegister(posl) => posl,
            CTokRestrict(posl) => posl,
            CTokReturn(posl) => posl,
            CTokShort(posl) => posl,
            CTokSigned(posl) => posl,
            CTokSizeof(posl) => posl,
            CTokStatic(posl) => posl,
            CTokStaticAssert(posl) => posl,
            CTokStruct(posl) => posl,
            CTokSwitch(posl) => posl,
            CTokTypedef(posl) => posl,
            CTokTypeof(posl) => posl,
            CTokThread(posl) => posl,
            CTokUnion(posl) => posl,
            CTokUnsigned(posl) => posl,
            CTokVoid(posl) => posl,
            CTokVolatile(posl) => posl,
            CTokWhile(posl) => posl,
            CTokCLit(posl, _) => posl,
            CTokILit(posl, _) => posl,
            CTokFLit(posl, _) => posl,
            CTokSLit(posl, _) => posl,
            CTokIdent(posl, _) => posl,
            CTokTyIdent(posl, _) => posl,
            CTokGnuC(posl, _) => posl,
            CTokClangC(posl, _) => posl,
            CTokEof => panic!("CToken::into_pos_len: Eof"),
        }
    }
}

use std::fmt::{self, Display, Formatter};
impl Display for CToken {
    fn fmt(&self, f: &mut Formatter) -> fmt::Result {
        // TODO
        write!(f, "{:?}", self)
    }
}

#[derive(Clone, Debug)]
pub enum GnuCTok {
    GnuCAttrTok,
    GnuCExtTok,
    GnuCVaArg,
    GnuCOffsetof,
    GnuCTyCompat,
    GnuCComplexReal,
    GnuCComplexImag,
}
pub use self::GnuCTok::*;

#[derive(Clone, Debug)]
pub struct ClangCTok(pub ClangCVersion);
pub type ClangCVersionTok = ClangCTok;
